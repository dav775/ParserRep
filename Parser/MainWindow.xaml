<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        x:Name="MForm"
        x:Class="Parser.MainWindow"
        Title="Dinamyc monitor v.2"
        Height="450"
        Width="800">

    <Window.Resources>
        <CollectionViewSource x:Key="DataList" CollectionViewType="ListCollectionView"/>
        <CollectionViewSource x:Key="FileList" CollectionViewType="ListCollectionView"/>
        <Storyboard x:Key="OnMouseEnter1"/>
        <Storyboard x:Key="OnMouseEnter2"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="r1"/>
            <RowDefinition x:Name="r2" Height="{Binding GridHiegthVal}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="550"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <DataGrid Grid.Column="0"  Grid.Row="0" 
                  ItemsSource="{Binding Records}" 
                  AutoGenerateColumns="False" 
                  x:Name="dgMain" 
                  VerticalAlignment="Stretch " 
                  Margin="5" 
                  HorizontalAlignment="Stretch"
                  VirtualizingPanel.IsVirtualizing="True">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=Date}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Date" HorizontalAlignment="Center"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=Open}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Open" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=High}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="High" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=Low}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Low" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=Close}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Close" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=Volume}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Volume" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </DataGrid.Background>
        </DataGrid>

        <DataGrid Grid.Column="1"  Grid.Row="0" 
                  ItemsSource="{Binding ProcFiles}" 
                  AutoGenerateColumns="False" 
                  x:Name="dgProccFiles" 
                  VerticalAlignment="Stretch " 
                  Margin="5" 
                  HorizontalAlignment="Stretch"
                  VirtualizingPanel.IsVirtualizing="True">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=FileName}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="File name" HorizontalAlignment="Center"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Process status" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="1">
                                <ProgressBar Grid.Column="0" Minimum="0" Maximum="100" Value="{Binding Path=Completion}" />
                                <Label Grid.Column="0" Content="{Binding Path=Message}" Background="Transparent" HorizontalAlignment="Center" Margin="0" Padding="0" FontSize="12"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
            </DataGrid.Columns>
            <DataGrid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </DataGrid.Background>
        </DataGrid>
       
        <StackPanel Grid.ColumnSpan="2" Grid.Row="2" Margin="1" HorizontalAlignment="Stretch">

            <Expander x:Name="ep" 
                      Header="Settings" 
                      Height="Auto" 
                      Margin="2" 
                      VerticalAlignment="Top" 
                      HorizontalAlignment="Stretch" 
                      RenderTransformOrigin="1,1"
                      BorderThickness="1,2,1,2"
                      Padding="2">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Expanded">
                        <i:InvokeCommandAction Command="{Binding Expanded}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Collapsed">
                        <i:InvokeCommandAction Command="{Binding Collapsed}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>


                <Expander.BorderBrush >
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FF837B7B" Offset="0.642"/>
                        <GradientStop Color="#FF9D9696" Offset="0.986"/>
                    </LinearGradientBrush>
                </Expander.BorderBrush>

                <Grid Grid.Row="0" Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition MinHeight="35" Height="Auto" />
                        <RowDefinition MinHeight="35" Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="140"/>
                        <ColumnDefinition Width="*" MinWidth="280"/>
                        <ColumnDefinition Width="Auto" MinWidth="100"/>
                        <ColumnDefinition Width="Auto" MinWidth="5"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Row="0" BorderThickness="1,2,1,2" Margin="1,2,1,2" Padding="2" CornerRadius="4" Grid.ColumnSpan="3">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="White" Offset="0.6"/>
                                <GradientStop Color="Black" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                    </Border>
                    <Border Grid.Row="1" BorderThickness="1,2,1,2"  Margin="1,2,1,2" Padding="2" CornerRadius="4" Grid.ColumnSpan="3">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="White" Offset="0.6"/>
                                <GradientStop Color="Black" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                    </Border>

                    <Border Grid.RowSpan="2" BorderThickness="1,2,1,2"  Margin="1,2,1,2" Padding="2" CornerRadius="4" Grid.Column="5">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="White" Offset="0.6"/>
                                <GradientStop Color="Black" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                    </Border>


                    <Label Grid.Row="0" Grid.Column="0" Content="Time Interval" Width="140" Style="{StaticResource Def_Label}" Margin="1,2,1,2"/>

                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="1,2,1,2">
                        <Label Content="hh" Width="26" Style="{StaticResource Def_Label}"/>
                        <ComboBox x:Name="cbHh" MinWidth="30" Style="{DynamicResource ComboBoxStyle1}" ItemsSource="{Binding HHDS}" SelectedValue="{Binding HHVal}"/>
                        <Label Content="mm" Width="34" Style="{StaticResource Def_Label}"/>
                        <ComboBox x:Name="cbMm" MinWidth="30" Style="{DynamicResource ComboBoxStyle1}" ItemsSource="{Binding MSDS}" SelectedValue="{Binding MMVal}"/>
                        <Label Content="ss" Width="24" Style="{StaticResource Def_Label}"/>
                        <ComboBox x:Name="cbSs" MinWidth="30" Style="{DynamicResource ComboBoxStyle1}" ItemsSource="{Binding MSDS}" SelectedValue="{Binding SSVal}"/>
                    </StackPanel>
                    <Button Grid.Row="0" Grid.Column="2" Content="Set" Style="{StaticResource Def_Button}" Margin="1,2,2,2" Command="{Binding ChangeInterval}"/>
                    <ToggleButton Grid.RowSpan="2" Grid.Column="4" IsChecked="{Binding ProcessingType, Mode=TwoWay}"  Style="{StaticResource Def_ToggleButton}" Margin="1,2,2,2">
                        <TextBlock Text="{Binding ProcessingTypeButtonContent}" TextWrapping="Wrap" TextAlignment="Center" Padding="3,3,3,3"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding ChangeProcessType}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding ChangeProcessType}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        </ToggleButton>


                    <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" >
                        <Label  Content="Work Directory" MinWidth="100" Width="140" Style="{StaticResource Def_Label}" />
                        <Label  Content="{Binding WorkDirectory}"  x:Name="lbWD" MinWidth="10" Width="Auto" Style="{StaticResource Def_Label}" />
                    </StackPanel>
                    <Button Grid.Row="1" Grid.Column="2" Content="Select" Margin="1,2,2,2" Style="{StaticResource Def_Button}" Command="{Binding ChangeDirectory}"/>

                </Grid>

            </Expander>

        </StackPanel>

    </Grid>

</Window>
